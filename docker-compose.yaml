services:
  prj:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - 8080:8080
    depends_on:
      set_migrations:
        condition: service_completed_successfully
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - ./backend/cmd/log:/backend/cmd/log

  products_postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 3

  set_migrations:
    image: gomicro/goose
    command: goose -dir /app/migrations postgres "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@products_postgres:5432/$POSTGRES_DB?sslmode=disable" up
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - ./backend/internal/database/migrations:/app/migrations
    depends_on:
      products_postgres:
        condition: service_healthy
